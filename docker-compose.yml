services:
  yolo-inference:
    build:
      context: .
      dockerfile: docker/yolo_inference.Dockerfile
    volumes:
      - streams-db:/app/config
      - ./models:/app/models
      - ./TestVideos/:/app/Videos/
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_QUEUE=yolo-detections
    networks:
      - detector-network
    depends_on:
      rabbitmq: 
         condition: service_healthy
      db:
         condition: service_started
    deploy:
      replicas: 3

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - detector-network

  db:
    build:
      context: .
      dockerfile: docker/db.Dockerfile
    container_name: sqlite_db
    volumes:
      - streams-db:/app/config
    networks:
      - detector-network
    command: ["python", "config.py"]

  web-ui:
    build:
      context: .
      dockerfile: docker/web_ui.Dockerfile
    ports:
      - "5005:5005"
    depends_on:
      db:
        condition: service_started
    volumes:
      - streams-db:/app/config
    networks:
      - detector-network

volumes:
  streams-db:

networks:
  detector-network:
    driver: bridge
